<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <!-- Realm实现 -->
    <bean id="userRealm" class="com.zexinwang.realm.UserRealm">
        <!-- 开启相关缓存，设置缓存cacheName -->
        <!--<property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>-->
    </bean>
    <bean id="testRealm" class="com.zexinwang.realm.TestRealm"/>

    <!-- 缓存管理器 -->
    <!--<bean id="cacheManager" class="com.zexinwang.shiro.spring.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean>-->

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- sessionId Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="shiro-demo-session"/>
        <property name="httpOnly" value="true"/>
        <!-- 设置为-1时，关闭浏览器即失效，单位：秒 -->
        <property name="maxAge" value="-1"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler"
          class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <!-- 间隔多少时间验证会话，单位毫秒 -->
        <property name="interval" value="1800000" />
        <property name="sessionManager" ref="sessionManager" />
    </bean>

    <!-- 会话监听器 -->
    <bean id="customSessionListener" class="com.zexinwang.listener.CustomSessionListener" />

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session 有效时间为半小时 （毫秒单位） -->
        <property name="globalSessionTimeout" value="1800000"/>
        <!-- 是否删除无效的，默认true -->
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 是否开启会话验证，默认true -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionListeners">
            <list>
                <ref bean="customSessionListener" />
            </list>
        </property>
    </bean>

    <!-- rememberMe cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="shiro-demo-rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 认证策略 -->
    <bean id="firstSuccess" class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy"/>
    <!-- 认证器 -->
    <bean id="modularRealmAuthenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
        <property name="authenticationStrategy" ref="firstSuccess"/>
<<<<<<< HEAD
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--<property name="realm" ref="userRealm" />-->
        <!-- 设置realm -->
=======
>>>>>>> 9b5e8ec3d2532cf455799a54a584373c0aabe501
        <property name="realms">
            <list>
                <ref bean="userRealm"/>
                <ref bean="testRealm"/>
            </list>
        </property>
<<<<<<< HEAD
=======
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--<property name="realm" ref="userRealm" />-->
        <property name="authenticator" ref="modularRealmAuthenticator"/>
>>>>>>> 9b5e8ec3d2532cf455799a54a584373c0aabe501
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <!--<property name="cacheManager" ref="cacheManager" />-->
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 自定义的拦截器 -->
    <bean id="roleFilter" class="com.zexinwang.filter.RoleFilter"/>
    <bean id="teacherRoleFilter" class="com.zexinwang.filter.TeacherRoleFilter"/>
    <bean id="permissionFilter" class="com.zexinwang.filter.PermissionFilter"/>

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/index/login.htm"/>
        <property name="filterChainDefinitions">
            <value>
                /logout.htm = logout
                /index/** = anon
                /user/** = authc,roleFilter,permissionFilter
                /admin/** = user,roleFilter,permissionFilter
                /teacher/** = authc,teacherRoleFilter
                /** = authc
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>